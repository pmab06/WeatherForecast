* {
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

#cidades {
    /* opacity: 0; */
    display: none;
}

html {
    height: 100vh;
    width: 100vw;
}

body {
    margin: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
}

main {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 3rem;
    border-radius: 2rem;
    border: 2.5px solid white;
    box-shadow: 0px 0px 30px 0px rgba(0, 9, 49, 0.5);

}

main>* {
    align-items: center;
    color: white;
    opacity: 80%;
}

main>.row {
    align-items: center;
    justify-content: center;
}

.row {
    display: flex;
    flex-direction: row;
}

.select-wrapper {
    display: flex;
    flex-direction: column;
    width: 16rem;
}

select {
    background-color: rgba(0, 0, 0, 0.3);
    border: 1px solid rgb(255, 255, 255);
    padding: 0.5rem;
    margin: 0.1rem 0 0.5rem 0;
    font-size: medium;
    font-weight: 600;
    border-radius: 0.6rem;
    color: rgb(255, 255, 255);
}

option {
    color: white;
    font-weight: normal;
    background-color: rgb(0, 3, 29);
}

.temperatura {
    font-size: 64px;
    font-weight: lighter;
    text-shadow: 0px 0px 10px rgb(255, 255, 255);
}

.temps {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    margin-inline: 2rem;
}

#data-hora {
    display: flex;
    flex-direction: row;
    width: 100%;
    justify-content: start;
    align-items: start;
}

#data-hora>* {
    border: 1px solid white;
    background-color: rgba(0, 0, 0, 0.3);
    margin: 0.5rem;
    margin-left: 0;
    padding: 0.15rem 0.75rem;
    border-radius: 1rem;
}
#data{
    font-size: medium;
}
#hora{
    font-weight: 600;
}

/* ==============================TESTE=============================== */

@property --top-color {
    syntax: '<color>';
    initial-value: rgb(79, 187, 230);
    inherits: false;
}

@property --bottom-color {
    syntax: '<color>';
    initial-value: rgb(0, 94, 156);
    inherits: false;
}

@property --degree {
    syntax: '<angle>';
    initial-value: 315deg;
    inherits: false;
}


main {
    /* Optional: change initial value of the variables */
    /* --myColor1: #f64; --myColor2: brown; */

    background: linear-gradient(var(--degree), var(--top-color), var(--bottom-color));
    transition: --top-color 3s, --bottom-color 1s, --degree 5s;
}

main:hover {
    --top-color: rgb(8, 19, 39);
    --bottom-color: rgb(67, 100, 153);
    --degree: 360deg;
}